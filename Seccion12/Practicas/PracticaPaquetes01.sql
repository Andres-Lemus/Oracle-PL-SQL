SET SERVEROUT ON
CREATE OR REPLACE PACKAGE REGIONES
IS
   PROCEDURE ALTA_REGION (COD REGIONS.REGION_ID%TYPE, REGION REGIONS.REGION_NAME%TYPE);
   PROCEDURE BAJA_REGION (COD REGIONS.REGION_ID%TYPE);
   PROCEDURE MOD_REGION (COD REGIONS.REGION_ID%TYPE, REGION REGIONS.REGION_NAME%TYPE);
   FUNCTION CON_REGION (COD REGIONS.REGION_ID%TYPE) RETURN VARCHAR2;
END;

CREATE OR REPLACE PACKAGE BODY REGIONES
IS

FUNCTION EXISTE_REGION (COD REGIONS.REGION_ID%TYPE, REGION REGIONS.REGION_NAME%TYPE) 
RETURN BOOLEAN
IS
CURSOR C1 IS SELECT REGION_ID, REGION_NAME FROM REGIONS;
BEGIN
    FOR I IN C1 LOOP
        IF I.REGION_ID = COD AND I.REGION_NAME = REGION THEN
            RETURN TRUE;
        END IF;
    END LOOP;
    RETURN FALSE;
END EXISTE_REGION;

PROCEDURE ALTA_REGION(COD REGIONS.REGION_ID%TYPE, REGION REGIONS.REGION_NAME%TYPE) 
IS
EXIST BOOLEAN;
BEGIN
    EXIST:=EXISTE_REGION(COD,REGION);
    IF EXIST = FALSE THEN
        INSERT INTO REGIONS VALUES(COD,REGION);
        DBMS_OUTPUT.PUT_LINE('Región Insertada');
    ELSE
        DBMS_OUTPUT.PUT_LINE('La región ya existe');
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('No puede insertar una ID existente');
END ALTA_REGION;

PROCEDURE BAJA_REGION(COD REGIONS.REGION_ID%TYPE)
IS
EXIST BOOLEAN;
GET_REGION regions.region_name%TYPE;
BEGIN
    GET_REGION:=CON_REGION(COD);
    EXIST:=EXISTE_REGION(COD,GET_REGION);
    IF EXIST = TRUE THEN
        DELETE FROM REGIONS WHERE REGION_ID = COD;
        DBMS_OUTPUT.PUT_LINE('Región de ID'||COD||' Borrada');
    END IF;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('La región no existe');
END BAJA_REGION;

PROCEDURE MOD_REGION(COD REGIONS.REGION_ID%TYPE, REGION REGIONS.REGION_NAME%TYPE) 
IS
EXIST BOOLEAN;
BEGIN
    EXIST:=EXISTE_REGION(COD,REGION);
    IF EXIST = FALSE THEN
        UPDATE REGIONS SET REGION_NAME = REGION 
        WHERE REGION_ID = COD;
        DBMS_OUTPUT.PUT_LINE('Región Actualizada');
    ELSE
        DBMS_OUTPUT.PUT_LINE('La región ya existe');
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('No puede insertar una ID existente');
END MOD_REGION;

FUNCTION CON_REGION(COD REGIONS.REGION_ID%TYPE)
RETURN VARCHAR2
IS
GET_REGION regions.region_name%TYPE;
BEGIN
    SELECT REGION_NAME INTO GET_REGION FROM REGIONS 
    WHERE REGION_ID = COD;
    RETURN GET_REGION;
END CON_REGION;

END REGIONES;

EXECUTE regiones.mod_region(101,'Greenland');
EXECUTE regiones.alta_region(103,'Oceania');
EXECUTE regiones.baja_region(99);