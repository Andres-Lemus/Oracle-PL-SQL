-- Punto #1
CREATE OR REPLACE TRIGGER DEL_CLERK 
BEFORE DELETE ON EMPLOYEES 
FOR EACH ROW 
WHEN (OLD.JOB_ID LIKE '%CLERK') 
BEGIN
    RAISE_APPLICATION_ERROR(-20000,'NO SE PUEDE ELIMINAR UN EMPLEADO RELACIONADO A CLERK');
END;

SELECT * FROM EMPLOYEES WHERE JOB_ID LIKE '%CLERK';
DELETE FROM EMPLOYEES WHERE employee_id = 115;


--Punto #3
CREATE OR REPLACE TRIGGER REG_AUDIT 
BEFORE INSERT ON REGIONS 
BEGIN
    INSERT INTO AUDITORIA (USUARIO, FECHA) VALUES(USER,SYSDATE);
END;
SELECT * FROM REGIONS;
SELECT * FROM AUDITORIA;

INSERT INTO REGIONS VALUES (22, 'REGION22');


-- Punto #4
CREATE OR REPLACE TRIGGER CHANGE_SAL 
BEFORE UPDATE OF SALARY ON EMPLOYEES 
FOR EACH ROW
BEGIN
    IF :NEW.SALARY < :OLD.SALARY THEN
        RAISE_APPLICATION_ERROR(-20000, 'NO PUEDE REDUCIR UN SALARIO');
    END IF;
    IF :NEW.SALARY > :OLD.SALARY THEN
        INSERT INTO AUDITORIA VALUES(USER, SYSDATE, :OLD.SALARY, :NEW.SALARY);
    END IF;
END;
SELECT * FROM employees WHERE salary = 6000;
SELECT * FROM AUDITORIA;
UPDATE employees SET salary=7000 WHERE salary = 6000;


-- Punto #5
CREATE OR REPLACE TRIGGER INS_DEPT 
BEFORE INSERT ON DEPARTMENTS 
FOR EACH ROW
DECLARE
    DEPT_ID NUMBER;
BEGIN
    SELECT DEPARTMENT_ID INTO DEPT_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID = :NEW.DEPARTMENT_ID;
    RAISE_APPLICATION_ERROR(-20000, 'Departamento existente');
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            IF :NEW.LOCATION_ID IS NULL THEN
                :NEW.LOCATION_ID := 1700;
            END IF;
            IF :NEW.MANAGER_ID IS NULL THEN
                :NEW.MANAGER_ID := 200;
            END IF;
END;

SELECT * FROM departments;
INSERT INTO departments (department_id, department_name) VALUES (910,'Printing');