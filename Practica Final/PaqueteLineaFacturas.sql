create or replace PACKAGE LINEAS_FACTURASP AS
    PROCEDURE ALTA_LINEA (P_COD_FACTURA NUMBER,P_COD_PRODUCTO NUMBER,P_UNIDADES NUMBER,P_FECHA DATE);
    PROCEDURE BAJA_LINEA (P_COD_FACTURA NUMBER,P_COD_PRODUCTO NUMBER);
    PROCEDURE MOD_PRODUCTO(P_COD_FACTURA NUMBER,P_COD_PRODUCTO NUMBER,P_UNIDADES NUMBER);
    PROCEDURE MOD_PRODUCTO(P_COD_FACTURA NUMBER, P_COD_PRODUCTO NUMBER, P_FECHA DATE);
    FUNCTION NUM_LINEAS(P_COD_FACTURA NUMBER) RETURN NUMBER;
END LINEAS_FACTURASP;
/
create or replace PACKAGE BODY LINEAS_FACTURASP AS

    FUNCTION FACTURA_EXISTE (
        COD NUMBER,
        COD_PROD NUMBER
    ) RETURN BOOLEAN IS
        CONTAR NUMBER := 0;
        COD_FACT facturas.cod_factura%type;
    BEGIN
        SELECT cod_factura INTO COD_FACT FROM LINEAS_FACTURA WHERE cod_factura=COD AND cod_producto=COD_PROD;
        RETURN true;
        EXCEPTION 
            WHEN NO_DATA_FOUND THEN
                RETURN false;
            WHEN OTHERS THEN 
                 RAISE_APPLICATION_ERROR(-20000,'ERROR'|| sqlcode);
    END FACTURA_EXISTE;

    PROCEDURE ALTA_LINEA (P_COD_FACTURA NUMBER,P_COD_PRODUCTO NUMBER,P_UNIDADES NUMBER,P_FECHA DATE)
     AS
        ENCONTRADA BOOLEAN;
        FACT_EXISTE EXCEPTION;
        PRECIO NUMBER;
    BEGIN
        ENCONTRADA := FACTURA_EXISTE(P_COD_FACTURA,P_COD_PRODUCTO);
        IF not ENCONTRADA THEN 
            SELECT pvp INTO PRECIO FROM PRODUCTOS WHERE cod_producto=P_COD_PRODUCTO;
            INSERT INTO LINEAS_FACTURA VALUES (P_COD_FACTURA,P_COD_PRODUCTO,PRECIO,P_UNIDADES,P_FECHA);
            COMMIT;
        ELSE
            RAISE FACT_EXISTE;
        END IF;

    EXCEPTION
        WHEN FACT_EXISTE THEN
            RAISE_APPLICATION_ERROR(-20001,'La relacion factura producto ya existe');
        WHEN NO_DATA_FOUND THEN
             RAISE_APPLICATION_ERROR(-20002,'El producto no existe');
        WHEN OTHERS THEN 
           RAISE_APPLICATION_ERROR(-20000,'ERROR: '|| sqlcode||' '||SQLERRM);
    END;

    PROCEDURE BAJA_LINEA (
        P_COD_FACTURA NUMBER,P_COD_PRODUCTO NUMBER
    ) AS
        FACT_NO_EXISTE EXCEPTION;
        ENCONTRADA BOOLEAN;
    BEGIN
        ENCONTRADA := FACTURA_EXISTE(P_COD_FACTURA,P_COD_PRODUCTO);
        IF ENCONTRADA = true THEN
            DELETE FROM LINEAS_FACTURA WHERE cod_factura = P_COD_FACTURA AND cod_producto=P_COD_PRODUCTO;
            COMMIT;
        ELSE
            RAISE FACT_NO_EXISTE;
        END IF;

    EXCEPTION
        WHEN FACT_NO_EXISTE THEN
            RAISE_APPLICATION_ERROR(-20001,'El numero de factura no existe');
        WHEN OTHERS THEN 
            RAISE_APPLICATION_ERROR(-20000,'ERROR: '|| sqlcode);
    END;

     PROCEDURE MOD_PRODUCTO (
        P_COD_FACTURA NUMBER,
        P_COD_PRODUCTO number,
        P_FECHA DATE
    ) IS
        FACT_NO_EXISTE EXCEPTION;
        ENCONTRADA BOOLEAN;
    BEGIN
        ENCONTRADA := FACTURA_EXISTE(P_COD_FACTURA,P_COD_PRODUCTO);
        IF ENCONTRADA = true THEN
            UPDATE LINEAS_FACTURA SET fecha = P_FECHA WHERE cod_factura = P_COD_FACTURA and cod_producto=P_COD_PRODUCTO;
            COMMIT;
        ELSE
            RAISE FACT_NO_EXISTE;
        END IF;

    EXCEPTION
        WHEN FACT_NO_EXISTE THEN
            RAISE_APPLICATION_ERROR(-20001,'El numero de factura no existe');
        WHEN OTHERS THEN 
            RAISE_APPLICATION_ERROR(-20000,'ERROR: '|| sqlcode);
    END;

    PROCEDURE MOD_PRODUCTO (
        P_COD_FACTURA NUMBER,
        P_COD_PRODUCTO number,
        P_UNIDADES number
    ) IS
        FACT_NO_EXISTE EXCEPTION;
        ENCONTRADA BOOLEAN;
    BEGIN
        ENCONTRADA := FACTURA_EXISTE(P_COD_FACTURA,P_COD_PRODUCTO);
        IF ENCONTRADA = true THEN
            UPDATE LINEAS_FACTURA f SET unidades=P_UNIDADES, pvp=(select pvp from productos where cod_producto=f.cod_producto) 
            WHERE cod_factura = P_COD_FACTURA and cod_producto = P_COD_PRODUCTO;
            COMMIT;
        ELSE
            RAISE FACT_NO_EXISTE;
        END IF;

    EXCEPTION
        WHEN FACT_NO_EXISTE THEN
            RAISE_APPLICATION_ERROR(-20001,'El numero de factura no existe');
        WHEN OTHERS THEN 
            RAISE_APPLICATION_ERROR(-20000,'ERROR: '|| sqlcode);
    END;

    FUNCTION NUM_LINEAS (
        P_COD_FACTURA NUMBER
    ) RETURN NUMBER AS
        CONTAR NUMBER := 0;
    BEGIN
        SELECT COUNT(*) INTO CONTAR FROM LINEAS_FACTURA  WHERE cod_factura=P_COD_FACTURA;
        RETURN CONTAR;
    END;

END LINEAS_FACTURASP;