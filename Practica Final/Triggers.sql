CREATE OR REPLACE TRIGGER T_FACTURAS 
BEFORE DELETE OR INSERT OR UPDATE ON FACTURAS
DECLARE
    OPERACION CHAR(1);
BEGIN
    IF INSERTING THEN
        OPERACION:='I';
    END IF;
    IF UPDATING THEN
        OPERACION:='U';
    END IF;
    IF DELETING THEN
        OPERACION:='D';
    END IF;
    INSERT INTO CONTROL_LOG VALUES (USER,SYSDATE,'FACTURAS',OPERACION);
END;
/


CREATE OR REPLACE TRIGGER T_LINEAS_FACTURAS
BEFORE DELETE OR INSERT OR UPDATE ON LINEAS_FACTURA
DECLARE
    OPERACION CHAR(1);
BEGIN
    IF INSERTING THEN
        OPERACION:='I';
    END IF;
    IF UPDATING THEN
        OPERACION:='U';
    END IF;
    IF DELETING THEN
        OPERACION:='D';
    END IF;
    INSERT INTO CONTROL_LOG VALUES (USER,SYSDATE,'LINEAS_FACTURA',OPERACION);
END;
/
--select * from productos;
--select * from lineas_factura;
CREATE OR REPLACE TRIGGER T_LINEAS_FACTURAS_PRECIO
AFTER DELETE OR INSERT OR UPDATE ON LINEAS_FACTURA
FOR EACH ROW
DECLARE
   TOTAL NUMBER:=0;
BEGIN
    IF INSERTING THEN
        UPDATE PRODUCTOS SET total_vendidos=total_vendidos+(:NEW.pvp*:NEW.unidades)
        WHERE cod_producto=:NEW.cod_producto;
    END IF;
    IF UPDATING THEN
        TOTAL:=(:OLD.pvp*:OLD.unidades)-(:NEW.PVP*:NEW.UNIDADES);
        UPDATE PRODUCTOS SET total_vendidos=total_vendidos+TOTAL
        WHERE cod_producto=:NEW.cod_producto;
    END IF;
    IF DELETING THEN
        UPDATE PRODUCTOS SET total_vendidos=total_vendidos-(:NEW.pvp*:NEW.unidades)
        WHERE cod_producto=:NEW.cod_producto;
    END IF;
END;